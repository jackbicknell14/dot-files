# Legacy config layer
export EDITOR="vim"

# Python multithreading
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# Tmuxinator
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator


# Added by serverless binary installer
# export PATH="$HOME/.serverless/bin:$PATH"

# PyEnv Config



# Java/Kotlin Config

# export JAVA_HOME="/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home"
# export ANDROID_HOME="/Users/jackbicknell/Library/Android/sdk"

# Android emulator
# export PATH="/Users/jackbicknell/Library/Android/sdk/emulator:${PATH}"

# Flutter config
# export PATH="$PATH:/Users/jackbicknell/sandboxes/flutter/bin"

# Node Config
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm


# added by Anaconda3 2019.10 installer

# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(CONDA_REPORT_ERRORS=false '/opt/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "/opt/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda3/etc/profile.d/conda.sh"
        CONDA_CHANGEPS1=false conda activate base
    else
        \export PATH="/opt/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<

# emacs
# export PATH="$PATH:/Users/jackbicknell/.emacs.doom/bin"
